<?php

namespace App\Form\Type;

use App\Utils\Money;
use Symfony\Component\Form\Extension\Core\Type\MoneyType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use App\Form\DataTransformer\SimpleMoneyToArrayTransformer;
use Symfony\Component\Form\AbstractType;

class SimpleMoneyType extends AbstractType
{
    private $currencyCodeList;
    private $referenceCurrencyCode;

    public function __construct(Money $money)
    {
        $this->referenceCurrencyCode = $money->getCurrency();
        $this->currencyCodeList = [$money->getCurrency()];
    }

    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $transformer = new SimpleMoneyToArrayTransformer($options['currency']);

        $builder
            ->addModelTransformer($transformer);
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'currency' => $this->referenceCurrencyCode,
            'divisor' => 100,
        ]);
        $resolver->setAllowedTypes('currency', 'string');
        $resolver->setAllowedValues('currency', $this->currencyCodeList);
    }

    public function getBlockPrefix()
    {
        return parent::getBlockPrefix(); // TODO: Change the autogenerated stub
    }

    public function getParent(): string
    {
        return MoneyType::class;
    }
}
